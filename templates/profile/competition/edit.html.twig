{% extends 'base.html.twig' %}

{% form_theme form _self %}

{% block _competition_attachments_entry_widget %}
    <div class="form-group form-inline">
        {% if form.vars.value %}
            <div class="col-md-11 attachment_name pl-0"><i class="far fa-file-alt"></i> {{ form.vars.value.name ~ '.' ~ form.vars.value.extension }}</div>
            <button type="button" class="col-md-1 btn btn-danger remove_attachment">&times;</button>
            <div style="display: none">
                {{ form_widget(form) }}
            </div>
        {% else %}
            <div>
                {{ form_widget(form) }}
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block article %}
    <div class="mb-3">
        {% include 'flashes.html.twig' %}
    </div>

    <div class="form-group">
        {{ form_start(form) }}
        <div class="form-group">
            {{ form_label(form.name) }}
            {{ form_widget(form.name, {'attr': {'class':'form-control'}}) }}
        </div>
        <div class="form-group">
            {{ form_label(form.date) }}
            {{ form_widget(form.date, {'attr': {'class':'form-control pickaday-datepicker'}}) }}
        </div>
        <div class="form-group">
            {{ form_label(form.region) }}
            {{ form_widget(form.region, {'attr': {'class':'form-control'}}) }}
        </div>
        <div class="form-group">
            {{ form_label(form.attachments) }}
            {{ form_widget(form.attachments, {'attr': {'class':'form-control-file'}}) }}
        </div>
        <div class="form-group">
            {{ form_label(form.description) }}
            {{ form_widget(form.description, {'attr': {'class':'form-control ckeditor-textarea'}}) }}
        </div>
        {{ form_end(form) }}
    </div>
{% endblock %}



{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        let $addTagButton = document.createElement('button');
        $addTagButton.setAttribute('type', 'button');
        $addTagButton.classList.add('btn');
        $addTagButton.classList.add('btn-info');
        $addTagButton.innerHTML = 'Додати';

        let $newLinkLi = document.createElement('div').appendChild($addTagButton);

        // Get the ul that holds the collection of tags
        let $collectionHolder = document.querySelector('#competition_attachments');

        // add the "add a tag" anchor and li to the tags ul
        $collectionHolder.appendChild($newLinkLi);

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $collectionHolder.setAttribute('data-index', $collectionHolder.querySelectorAll('.attachment_name').length);

        $addTagButton.addEventListener('click', function(e) {
            // add a new tag form (see next code block)
            addTagForm($collectionHolder, $newLinkLi);
        });

        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            let prototype = $collectionHolder.getAttribute('data-prototype');
            let index = parseInt($collectionHolder.getAttribute('data-index'));
            prototype = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.setAttribute('data-index', index + 1);
            $newLinkLi.insertAdjacentHTML('beforebegin', prototype);
        }

        const clearButtons = document.querySelectorAll('.remove_attachment');

        if (clearButtons) {
            clearButtons.forEach(function (item, i) {
                item.addEventListener('click', function () {
                    // console.log(this.parentNode.parentNode)
                    this.parentNode.parentNode.removeChild(this.parentNode);
                });
            });
        }
    </script>
{% endblock %}
